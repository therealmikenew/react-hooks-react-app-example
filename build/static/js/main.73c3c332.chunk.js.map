{"version":3,"sources":["components/ExampleComponent.js","components/App.js","index.js"],"names":["ExampleComponent","className","src","alt","App","format","Date","ReactDOM","render","document","getElementById"],"mappings":"wLAeeA,MAZf,WACE,OACE,sBAAKC,UAAU,UAAf,UACE,qBACEC,IAAI,0DACJC,IAAI,oDAEN,0CCUSC,MAff,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,6BAAKI,YAAO,IAAIC,KAAQ,6BACxB,mBAAGL,UAAU,YAAb,6PAMA,cAAC,EAAD,IAAoB,cAAC,EAAD,Q,KCV1BM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.73c3c332.chunk.js","sourcesContent":["import React from \"react\";\n\n// no need to modify anything in here. The second test is looking for the returned JSX from this component\nfunction ExampleComponent() {\n  return (\n    <div className=\"example\">\n      <img\n        src=\"https://s3.amazonaws.com/ironboard-learn/sunglasses.gif\"\n        alt=\"a deeply impressed man, perhaps thinking 'whoa'\"\n      />\n      <p>Whoa!</p>\n    </div>\n  );\n}\n\nexport default ExampleComponent;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport ExampleComponent from \"./ExampleComponent\";\n\n// Add your code own within the return statement\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>{format(new Date(), \"MMMM do yyyy, h:mm:ss a\")}</h1>\n      <p className=\"App-intro\">\n        In React apps, we write JSX - it looks like HTML, and uses a lot of HTML\n        syntax. JSX lets us include JavaScript functions right along with the\n        HTML, and also allows us to add in components, which are separate,\n        self-contained chunks of JSX.\n      </p>\n      <ExampleComponent /><ExampleComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}